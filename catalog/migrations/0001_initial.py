# Generated by Django 3.1.1 on 2020-09-22 13:55

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="Author's first name", max_length=100, verbose_name='Firs Name')),
                ('last_name', models.CharField(help_text="Author's last name", max_length=100, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of birth', null=True, verbose_name='Date Of Birth')),
                ('date_of_death', models.DateField(blank=True, help_text='Date of death', null=True, verbose_name='Date Of Death')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('isbn', models.CharField(help_text='13 Character <a href="https://www.isbn-international.org/content/what-isbn">ISBN number</a>', max_length=13, primary_key=True, serialize=False, verbose_name='ISBN')),
                ('title', models.CharField(help_text="Book's title", max_length=200, verbose_name='Title')),
                ('description', models.CharField(blank=True, help_text='Description of the book', max_length=1000, null=True, verbose_name='Description')),
                ('imprint', models.CharField(max_length=200, verbose_name='Imprint')),
                ('year', models.DateField(help_text='Year of publication', null=True, verbose_name='Year')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'ordering': ['author'],
            },
        ),
        migrations.CreateModel(
            name='BookInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name="Book's instance id")),
                ('due_back', models.DateField(blank=True, help_text='Instance book due back', null=True, verbose_name='Due Back')),
                ('status', models.CharField(choices=[('a', 'Available'), ('m', 'Maintenance'), ('o', 'On loan'), ('r', 'Reserved')], default='a', help_text="Book's instance status", max_length=1)),
            ],
            options={
                'ordering': ['due_back'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.Field(choices=[('anthology', 'anthology'), ('autobiography', 'autobiography'), ('business & finance', 'business & finance'), ("children's books", "children's books"), ('cookbook', 'cookbook'), ('dictionary', 'dictionary'), ('encyclopedia', 'encyclopedia'), ('erotica', 'erotica'), ('fantasy', 'fantasy'), ('health & medicine', 'health& medicine'), ('history', 'history'), ('horror', 'horror'), ('inspirational', 'inspirational'), ('light fiction', 'light fiction'), ('mystery', 'mystery'), ('non-fiction', 'non-fiction'), ('politics', 'politics'), ('religious', 'religious'), ('romance', 'romance'), ('satire', 'satire'), ('science fiction', 'science fiction'), ('series', 'series'), ('thriller', 'thriller'), ('travel', 'travel'), ('fiction', 'fiction')], default='anthology', help_text="Genre's book", max_length=32, verbose_name='Genre type')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('en', 'English'), ('ru', 'Russian')], default='ru', help_text='language', max_length=2, verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='language',
            index=models.Index(fields=['name'], name='language_name_idx'),
        ),
        migrations.AddField(
            model_name='bookinstance',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.book'),
        ),
        migrations.AddField(
            model_name='book',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.author', verbose_name="Author's book"),
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ForeignKey(blank=True, help_text="Select a genre's book", on_delete=django.db.models.deletion.PROTECT, to='catalog.genre', verbose_name="Genre's Book"),
        ),
        migrations.AddField(
            model_name='book',
            name='language',
            field=models.ForeignKey(blank=True, help_text="Book's language", on_delete=django.db.models.deletion.PROTECT, to='catalog.language', verbose_name='Book Language'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['first_name', 'last_name'], name='author_name_idx'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['first_name'], name='author_first_name_idx'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['last_name'], name='author_last_name_idx'),
        ),
        migrations.AddIndex(
            model_name='bookinstance',
            index=models.Index(fields=['book'], name='book_instance_unique_id_idx'),
        ),
        migrations.AddIndex(
            model_name='bookinstance',
            index=models.Index(fields=['status'], name='book_instance_status_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='book_title_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['author'], name='book_author_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['isbn'], name='book_isbn_idx'),
        ),
    ]
